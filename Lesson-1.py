# i = 5
# f = 1.5
#
# print(type(i))
# print(type(f))
# print(1,2,3,4,5, sep=', ')
#
# l=[1,2,3,4,5,6,7,8,9]


# 1)написати прогу яка вибирає зі введеної строки цифри і виводить їх через кому,
# наприклад:
# st = 'as 23 fdfdg544' # введена строка
# 2,3,5,4,4        #вивело в консолі.
# #################################################################################

# st = 'as 23 fdfdg544'
#
# st1 = ', '.join(
#     [st1 for st1 in st if st1.isdigit()]
#           )
# print(st1)


# print(', ' .join(st1 for st1 in st if st1.isdigit()))


# 2)написати прогу яка вибирає зі введеної строки числа і виводить їх
# так як вони написані
# наприклад:
#   st = 'as 23 fdfdg544 34' #введена строка
#   23, 544, 34              #вивело в консолі
# #################################################################################

# st = 'as 23 fdfdg544 34'

# st1 =(
#     ', '.join(
#         ''.join(
#             st1 if st1.isdigit()
#             else ' ' for st1 in st
#         )
#       .split()
#     )
# )
# print(st1)


# print( ', '.join(''.join(st1 if st1.isdigit() else ' ' for st1 in st).split()))


# list comprehension
#
# 1)є строка:
#
# greeting = 'Hello, world'

# записати кожний символ як окремий елемент списку і зробити його заглавним:
# ['H', 'E', 'L', 'L', 'O', ',', ' ', 'W', 'O', 'R', 'L', 'D']

# greeting = 'Hello, world'
# st = ([st.upper() for st in greeting])
#
# print(st)


#
# 2) з диапозону від 0-50 записати тільки не парні числа при цьому піднести їх до квадрату
# приклад:
# [0, 1, 4, 9, 16, 25, 36, 49, 64, 81, 100, 121, 144, 169, 196, 225, 256, 289, 324, ...]
#

# i = ([i**2 for i in range(50) if i % 2])
# print(i)


# function
#
# - створити функцію яка виводить ліст

# def list(l):
#     for i in l:
#         print(i)

# - створити функцію яка приймає три числа та виводить та повертає найбільше.

# def max_three(a,b,c):
#     max_num = max(a,b,c)
#     print(max_num)
#     return max_num
#
# max_three(14, 2, 36)



# - створити функцію яка приймає будь-яку кількість чисел, повертає найменьше, а виводить найбільше

# def min_max(*args):
#     print(max(args))
#     return min(args)
#
# min_max(45,6,866,-4)


# - створити функцію яка повертає найбільше число з ліста

# def max_num(l):
#     return max(l)
# max_num([1,2,3,4,5])


# - створити функцію яка повертає найменьше число з ліста

# def min_num(l):
#     return min(l)
# min_num([1,2,3,4,5])

# - створити функцію яка приймає ліст чисел та складає значення елементів ліста та повертає його.

# def sum_num(l):
#     return sum(l)
# sum_num([1,2,3,4,5])

# - створити функцію яка приймає ліст чисел та повертає середнє арифметичне його значень.
#

# def avg(l):
#     print(sum(l)/len(l))
#     return sum(l)/len(l)
# avg([1,2,3,4,5,6,7,8,9,10])

# ################################################################################################
# 1)Дан list:
#   list = [22, 3,5,2,8,2,-23, 8,23,5]
#   - знайти мін число
l = [22, 3, 5, 2, 8, 2, -23, 8, 23, 5]

def min_num():
  print(min(l))
#   - видалити усі дублікати
def duplicates_num():
  print(list(set(l)))
#   - замінити кожне 4-те значення на 'X'
def x():
  print(['x' if not (i+1) % 4 else item for i, item in enumerate(l)])
# 2) вивести на екран пустий квадрат з "*" сторона якого вказана як агрумент функції
def square(n):
  for i in range(n):
    if i == 0 or i == n - 1:
      print('* '*n)
    else: print('*'+'  '*(n-2)+' *')
# 3) вывести табличку множення за допомогою цикла while
def teibel():
  size = 9
  i = 1
  while i <= size:
    p = 1
    while p <= size:
      res = i * p
      print('  ' if res//10 else '   ', end='')
      print(res, end='')
      # print(f'{res:4}', end='')
      p += 1
    i += 1
    print()
teibel()
# 4) переробити це завдання під меню

while True:
  print('1) - знайти мін число')
  print('2) - видалити усі дублікати')
  print('3) - замінити кожне 4-те значення на X')
  print('4) - вивести на екран пустий квадрат з "*" сторона якого вказана як агрумент функції')
  print('5) - вывести табличку множення за допомогою цикла while')
  print('6) - Вихід ')

  choise = input('Зроби вибір: ')

  if choise == '1':
    min_num()
  elif choise == '2':
    duplicates_num()
  elif choise == '3':
    x()
  elif choise == '4':
    square(8)
  elif choise == '5':
    teibel()
  elif choise == '6':
    break